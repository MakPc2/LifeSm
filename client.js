try {
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    const SAVE = [
        ["IsDeath", false],
        ["Hp", 100],
        ["Kills", 0],
        ["IsAdmin",  false]
    ],
    PROPS = Properties.GetContext(),
    MSGS_LOADER = ["<b>–ó–∞–≥—Ä—É–∑–∫–∞...</b>",
        "–ß–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é!",
        "<color=red>–ß—Ç–æ —Ç—ã —Ç—É—Ç –∑–∞–±—ã–ª?</a>",
        "–ö—Ç–æ —Ç–æ –≤–æ–æ–±—â–µ —ç—Ç–æ —á–∏—Ç–∞–µ—Ç?...",
        "–ö–∞—Ä–ª?!"],
    MAP_Y = 9;
    
    const isKE = PROPS.Get("KE");
    isKE.Value = false;

    // –°–æ–∑–¥–∞–Ω–∏–∫ –∫–æ–º–∞–Ω–¥
    Teams.Add("Blue", "<i><b><size=38>B</size><size=30>lue</size>  <size=38>T</size><size=30>eam</size></b>\nthis mode by mak</i>", {
        b: 1, r: 51/255, g: 51/255
    });
    var blueTeam = Teams.Get("Blue");
    blueTeam.Build.BlocksSet.Value = BuildBlocksSet.Blue;
    blueTeam.Spawns.SpawnPointsGroups.Add(1);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    Damage.GetContext().DamageIn.Value = false;
    Damage.GetContext().FriendlyFire.Value = true;
    BreackGraph.PlayerBlockBoost = true;
    BreackGraph.OnlyPlayerBlocksDmg = true;

    // –í—ã–∫–ª—é—á–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    ["Main", "Secondary", "Build", "Explosive"].forEach(function(wp) {
        Inventory.GetContext()[wp].Value = false;
    });

    // –í—Ö–æ–¥ –≤ –∫–æ–º–∞–Ω–¥—É –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    Teams.OnRequestJoinTeam.Add(function(p, t) {
        if (p.IdInRoom !== 1) return;
        outp(p);
        p.Properties.Get("IsAdmin").Value = true;
        t.add(p);
    });

    Players.OnPlayerConnected.Add(function(p) {
        outp(p);

        let prop = p.Properties;
        if (prop.Get("IsDeath").Value) return ban(p);

        // –°–ø–µ—Ü - –∑–Ω–∞—á–µ–Ω–∏—è
        p.contextedProperties.MaxHp.Value = parseInt(prop.Get("Hp").Value);

        p.Timers.Get("Respawn").RestartLoop(1);
    });

    Teams.OnPlayerChangeTeam.Add(function(p) {
        let prop = p.Properties;
        if (prop.Get("IsDeath").Value) return;
        p.Spawns.Spawn();
        p.Ui.Hint.Reset();
        showInstr(p);
    });

    // –°–ª—Ö—Ä–∞–Ω—è–µ–º—Å—è
    Players.OnPlayerDisconnected.Add(function(p) { save(p); });

    // –ë–∞–Ω–∏–º –∏–≥—Ä–æ–∫–∞ –ø—Ä–∏ —Å–º–µ—Ä—Ç–∏
    Damage.OnDeath.Add(function(p) { 
        let current = p.PositionIndex;
        MapEditor.SetBlock(current.x, MAP_Y, current.z, 682);
        
        if (!p.Properties.Get("IsAdmin").Value || !isKE.Value) ban(p);
    });

    function ban(p) {
        let prop = p.Properties;
        prop.Get("IsDeath").Value = true;
        Teams.Get("BlackTeam").add(p);
        p.Spawns.Spawn();
        p.Spawns.Despawn();
    }

    // –°—á–µ—Ç—á–∏–∫ Hp
    Damage.OnDamage.Add(function(p, p2, dmg) {
        let prop = p2.Properties;
        
        if (prop.Get("IsAdmin").Value) return;
        prop.Get("Hp").Value -= Math.ceil(dmg);

        if (prop.Get("Hp").Value <= 0) prop.Get("Hp").Value = 10;
    });

    // –¢–∞–π–º–µ—Ä—ã
    Timers.OnPlayerTimer.Add(function(t) {
        let p = t.Player, id = t.Id, prop = p.Properties;

        switch (id) {
            case "Respawn":
                prop.Get("Respawn-indx").Value += 1;

                if (prop.Get("Respawn-indx").Value > 10) {
                    blueTeam.add(p);
                    return t.Stop();
                }

                p.Ui.Hint.Value = ("<b>–ó–∞–≥—Ä—É–∑–∫–∞...</b>" + "\n"
                    + MSGS_LOADER[Math.floor(Math.random() * MSGS_LOADER.length)]);
                break;
            case "Reset": 
                p.Ui.Hint.Reset(); 
                break;
            case "Immor":
                prop.Immortality.Value = false;
                break;
        }
    });
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ KE —Ç–∞–π–º–µ—Ä–∞
    var KEtimer = Timers.GetContext().Get("KE");
    KEtimer.OnTimer.Add(function() {
        if (isKE.Value) {
            isKE.Value = false;
            Ui.GetContext().Hint.Value = "—Å–µ–∑–æ–Ω KE –Ω–∞—á–∞–ª—Å—è!"
        }
        else {
            isKE.Value = true;
            Ui.GetContext().Hint.Value = "üñ±";  // todo
        }
    });
    
    KEtimer.RestartLoop(30 * 60);
    Ui.GetContext().MainTimerId.Value = KEtimer.Id;

    // –ó–æ–Ω—ã
    var noBuild = AreaPlayerTriggerService.Get("NoBuild");
    noBuild.Tags = ["NoBuild"];
    noBuild.Enable = true;
    noBuild.OnEnter.Add(function(p) {
        p.inventory.Build.Value = false;
        p.Ui.Hint.Value = "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ";
        p.Timers.Get("Reset").Restart(5);
    });
    noBuild.OnExit.Add(function(p) {
        p.inventory.Build.Value = true;
        p.inventory.BuildInfinity.Value = true;
    });

    var noWp = AreaPlayerTriggerService.Get("NoWp");
    noWp.Tags = ["NoWeapon"];
    noWp.Enable = true;
    noWp.OnEnter.Add(function(p) {
        p.inventory.Main.Value = false;
        p.inventory.Secondary.Value = false;
        p.inventory.Explosive.Value = false;

        p.Damage.DamageIn.Value = false;
    });
    noWp.OnExit.Add(function(p) {
        p.inventory.Main.Value = true;
        p.inventory.Secondary.Value = true;
        p.inventory.Explosive.Value = true;
        p.Damage.FriendlyFire.Value = true;

        p.Damage.DamageIn.Value = true;
        p.Properties.Immortality.Value = true;
        p.Timers.Get("Immor").Restart(3);
    });

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    function save(p) {
        SAVE.forEach(function(el) {
            PROPS.Get(el[0] + p.Id).Value = p.Properties.Get(el[0]).Value;
        });
    }

    // –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –≤ –∏–≥—Ä–æ–∫–∞
    function outp(p) {
        SAVE.forEach(function(el) {
            p.Properties.Get(el[0]).Value = PROPS.Get(el[0] + p.Id).Value || el[1];
        });
    }

    // –≤—ã–≤–æ–¥ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    function showInstr(ctx) {
        ctx.PopUp("<b>–í–µ—Ä—Å–∏—è 1.7rls:</b>\n1. –î–æ–±–∞–≤–ª–µ–Ω —Å–µ–∑–æ–Ω –ö–ï.\n2. –¢–µ–ø–µ—Ä—å –∑–∞–±–∞–Ω–µ–Ω—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —á–µ—Ä–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ!.")
        ctx.PopUp("<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è.\n–í–µ—Ä—Å–∏—è: 1.7rls</b>");
        ctx.PopUp("<b><size=30>1. –ß—Ç–æ –±—É–¥–µ—Ç –µ—Å–ª–∏ —è —É–º—Ä—É?</size></b>\n<size=25>–ï—Å–ª–∏ –≤—ã –∫–∞–∫–∏–º –ª–∏–±–æ —Å–ø–æ—Å–æ–±–æ–º —É–º—Ä–µ—Ç–µ, —Ç–æ <i>–º–Ω–≥–Ω–æ–≤–µ–Ω–Ω–æ –±—É–¥–µ—Ç–µ –∑–∞–±–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ</i>, –ø–µ—Ä–µ–∑–∞—Ö–æ–¥ –Ω–µ –ø–æ–º–æ–∂–µ—Ç.</size>");
        ctx.PopUp("<b><size=30>2. –ß—Ç–æ —Ç–∞–∫–æ–µ —Å–µ–∑–æ–Ω –ö–ï?\n</size></b><size=10>–°–µ–∑–æ–Ω –ö–ï <i>—ç—Ç–æ —Å–µ–∑–æ–Ω –≤ –∫–æ—Ç–æ—Ä–æ–º –∏–≥—Ä–æ–∫–∏ –ø–æ—Å–ª–µ —Å–º–µ—Ä—Ç–∏ –Ω–µ –±—É–¥—É—Ç –∑–∞–±–∞–Ω–µ–Ω—ã, —ç—Ç–æ –¥–ª–∏—Ç—Å—è 30 –º–∏–Ω—É—Ç</i>. –ö–ï –ø—Ä–æ—Ö–æ–¥–∏—Ç –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç</size>")
        ctx.PopUp("<b><size=10>–û–°–û–ë–ï–ù–ù–û–°–¢–ò:\n3. –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è\n4. –ï—Å–ª–∏ –≤—ã —É–º—Ä–µ—Ç–µ, –ø–æ–¥ –≤–∞–º–∏ –∑–∞—Å–ø–∞–≤–Ω–∏—Ç—Å—è –∑–µ–ª–µ–Ω—ã–π –±–ª–æ–∫.</size></b>");
        ctx.PopUp("<b>–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã!</b>");
    }

} catch (err) {
    Teams.Add("Err",
        err.name + "\n" + err.message,
        {
            r: 0
        });
} finally {
    Teams.Add("BlackTeam",
        "<i><b><size=38>—É</size><size=30>–¥–∞—á–∏!</size></b>\n–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–±–∞–Ω–µ–Ω—ã—Ö</i>",
        {
            s: 1
        });
}